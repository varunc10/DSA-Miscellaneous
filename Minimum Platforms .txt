int findPlatform(int arr[], int dep[], int n)
    {
    	// Your code here
    	int count=0,inuse=0;
    	vector<pair<int,int>> v;
    	for(int i=0;i<n;i++){
    	    v.push_back({arr[i],dep[i]});
    	}
    	sort(v.begin(),v.end());
    	priority_queue<int,vector<int>,greater<int>> pq;
    // 	for(auto i:v){
    // 	    cout<<i.first<<"|"<<i.second<<" ";
    // 	}
    	for(int i=0;i<v.size();i++){
    	    if(pq.empty()||pq.top()>=v[i].first){
    	        inuse++;
    	    }
    	    else{
    	        while(!pq.empty()&&pq.top()<v[i].first){
    	            pq.pop();
    	            inuse--;
    	        }
    	        inuse++;
    	    }
    	    pq.push(v[i].second);
    	    count=max(inuse,count);
    	}
    	return count;
    }